vector<int> findUnion(int arr1[], int arr2[], int n, int m)
    {
        vector<int>ans;
        int i=0,j=0;
        unordered_set<int>st;
        while(i<n and j<m)
        {
            if(arr1[i]<=arr2[j])
            {
                if(st.find(arr1[i])==st.end())
                {
                    ans.push_back(arr1[i]);
                    st.insert(arr1[i]);
                }
                i++;
            }
            else{
                if(st.find(arr2[j])==st.end())
                {
                    st.insert(arr2[j]);
                    ans.push_back(arr2[j]);
                }
                j++;
            }
        }
        while(i<n)
        {
            if(st.find(arr1[i])==st.end())
            {
                ans.push_back(arr1[i]);
                st.insert(arr1[i]);
            }
            i++;
        }
        while(j<m)
        {
            if(st.find(arr2[j])==st.end())
            {
                ans.push_back(arr2[j]);
                st.insert(arr2[j]);
            }
            j++;
        }
        return ans;
    }
